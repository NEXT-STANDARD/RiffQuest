/**
 * Electron Main Process
 */

import { app, BrowserWindow, ipcMain } from 'electron';
import path from 'path';
import { fileURLToPath } from 'url';
import { OBSManager } from './obs-manager';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

let mainWindow = null;
let obsManager: OBSManager;

function createWindow() {
  const isDev = !app.isPackaged;

  mainWindow = new BrowserWindow({
    width: 1200,
    height: 800,
    webPreferences: {
      preload: path.join(__dirname, 'preload.js'),
      contextIsolation: true,
      nodeIntegration: false,
    },
    title: 'RiffQuest',
  });

  if (isDev) {
    mainWindow.loadURL('http://localhost:5173');
    mainWindow.webContents.openDevTools();
  } else {
    mainWindow.loadFile(path.join(__dirname, '../renderer/index.html'));
  }
}

app.whenReady().then(() => {
  createWindow();
  setupIPC();
});

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

/**
 * IPC通信ハンドラーをセットアップ
 */
function setupIPC() {
  obsManager = new OBSManager();
  obsManager.setMainWindow(mainWindow);

  // アプリケーションバージョン取得
  ipcMain.handle('app:get-version', () => {
    return app.getVersion();
  });

  // OBS接続
  ipcMain.handle('obs:connect', async (_, url: string, password?: string) => {
    try {
      await obsManager.connect(url, password);
      return { success: true };
    } catch (error) {
      return { success: false, error: error.message };
    }
  });

  // OBS切断
  ipcMain.handle('obs:disconnect', async () => {
    try {
      await obsManager.disconnect();
      return { success: true };
    } catch (error) {
      return { success: false, error: error.message };
    }
  });

  // 現在のシーン取得
  ipcMain.handle('obs:get-current-scene', async () => {
    try {
      const sceneName = await obsManager.getCurrentScene();
      return { success: true, sceneName };
    } catch (error) {
      return { success: false, error: error.message };
    }
  });
}
